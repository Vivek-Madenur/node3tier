steps:
- name: node
  entrypoint: npm
  args: ['--prefix', 'api', 'install']
- name: node
  entrypoint: npm
  args: ['--prefix', 'api', 'test']
- id: Build Image
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', 
          '--build-arg', 'DBUSER=${_DBUSER}',
          '--build-arg', 'DB=${_DB}',
          '--build-arg', 'DBPASS=${_DBPASS}',
          '--build-arg', 'DBHOST=${_DBHOST}',
          '--build-arg', 'DBPORT=${_DBPORT}',
          '--build-arg', 'PORT=${_PORT}',
          '-t', 
          '${_ARTIFACT_LOCATION}-docker.pkg.dev/${_GCP_PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_IMAGE_NAME}', 
          '-f', 
          '${_DOCKERFILE_PATH}', 
          '.' ]
- id: Push Image
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_ARTIFACT_LOCATION}-docker.pkg.dev/${_GCP_PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_IMAGE_NAME}:latest']
- id: Customise K8s yaml
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: "/bin/sh"
  args: ['-c', 'cat ./api/k8s-api.yaml | sed s/{{sql-instance}}/${_SQL_INSTANCE}/g > custom.yaml']
- id: Deploy to GKE
  name: "gcr.io/cloud-builders/gke-deploy"
  args:
  - run
  - --filename=custom.yaml
  - --image=${_ARTIFACT_LOCATION}-docker.pkg.dev/${_GCP_PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_IMAGE_NAME}:latest
  - --location=${_GKE_LOCATION}
  - --cluster=${_GKE_CLUSTER}
