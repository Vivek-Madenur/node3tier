steps:
# - id: Deploy SA for Auth Proxy
#   name: "gcr.io/cloud-builders/gke-deploy"
#   args:
#   - run
#   - --filename=./api/auth-proxy-sa.yaml
#   - --location=${_GKE_LOCATION}
#   - --cluster=${_GKE_CLUSTER}
# - id: SQL Auth Proxy Config
#   name: "gcr.io/cloud-builders/gcloud"
#   entrypoint: /bin/bash
#   args:
#   - -c
#   - |
#     gcloud iam service-accounts add-iam-policy-binding \
#     --role="roles/iam.workloadIdentityUser" \
#     --member="serviceAccount:magnificent-pen-332209.svc.id.goog[default/ksa-api]" \
#     myterraformsa@magnificent-pen-332209.iam.gserviceaccount.com &&
#     kubectl annotate --overwrite serviceaccount \
#     ksa-api \
#     iam.gke.io/gcp-service-account=myterraformsa@magnificent-pen-332209.iam.gserviceaccount.com
# - id: Install Nginx Ingress
#   name: "gcr.io/$PROJECT_ID/helm"
#   entrypoint: /bin/bash
#   args:
#   - -c
#   - |
#     helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx &&
#     helm repo update &&
#     helm upgrade --install nginx-ingress ingress-nginx/ingress-nginx
- id: Deploy Ingress
  name: "gcr.io/cloud-builders/gke-deploy"
  entrypoint: /bin/bash
  args:
  - -c
  - |
    apk add jq &&
    gcloud container clusters get-credentials magnificent-pen-332209-gke --region us-central1 --project magnificent-pen-332209 &&
    echo ip &&
    echo $(kubectl get service nginx-ingress-ingress-nginx-controller -ojson | jq -r '.status.loadBalancer.ingress[].ip') &&
    cat ./ingress/ingress.yaml | sed s/NGINX_INGRESS_IP/$(kubectl get service nginx-ingress-ingress-nginx-controller -ojson | jq -r '.status.loadBalancer.ingress[].ip')/g > custom.yaml &&
    cat custom.yaml &&
    kubectl apply -f custom.yaml
