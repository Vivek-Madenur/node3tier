steps:
- id: Deploy SA for Auth Proxy
  name: "gcr.io/cloud-builders/gke-deploy"
  args:
  - run
  - --filename=./api/auth-proxy-sa.yaml
  - --location=${_GKE_LOCATION}
  - --cluster=${_GKE_CLUSTER}
- id: SQL Auth Proxy Config
  name: "gcr.io/cloud-builders/gcloud"
  entrypoint: /bin/bash
  args:
  - -c
  - |
    gcloud iam service-accounts add-iam-policy-binding \
    --role="roles/iam.workloadIdentityUser" \
    --member="serviceAccount:magnificent-pen-332209.svc.id.goog[default/ksa-api]" \
    myterraformsa@magnificent-pen-332209.iam.gserviceaccount.com &&
    kubectl annotate --overwrite serviceaccount \
    ksa-api \
    iam.gke.io/gcp-service-account=myterraformsa@magnificent-pen-332209.iam.gserviceaccount.com
- id: Deploy Ingress
  name: "gcr.io/$PROJECT_ID/helm"
  entrypoint: /bin/bash
  args:
  - -c
  - |
    echo helm repo add &&
    helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx &&
    echo helm repo update &&
    helm repo update &&
    echo helm install &&
    helm install nginx-ingress ingress-nginx/ingress-nginx
- id: Deploy Route
  name: "gcr.io/cloud-builders/gke-deploy"
  entrypoint: /bin/bash
  args:
  - -c
  - |
    echo ip &&
    echo $(kubectl get service nginx-ingress-ingress-nginx-controller -ojson | jq -r '.status.loadBalancer.ingress[].ip') &&
    export _NGINX_INGRESS_IP=$(kubectl get service nginx-ingress-ingress-nginx-controller -ojson | jq -r '.status.loadBalancer.ingress[].ip') &&
    echo NGINX_INGRESS_IP=$_NGINX_INGRESS_IP &&
    cat ./ingress/ingress.yaml | sed s/NGINX_INGRESS_IP/$_NGINX_INGRESS_IP/g > custom.yaml &&
    cat custom.yaml &&
    kubectl apply -f custom.yaml
